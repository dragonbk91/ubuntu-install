#!/bin/bash
# https://github.com/marijnh/tern.git
git clone https://github.com/marijnh/tern.git ~/source-install/tern
cd ~/source-install/tern
npm install


# http://ternjs.net/doc/manual.html#emacs
#
# Emacs
#
# The Emacs mode is part of the main tern repository. It can be installed as follows:
#
# Make sure you are using Emacs 24 or later. The Tern mode requires lexical scoping.
# Clone this repository somewhere. Do npm install to get the dependencies.
# Make Emacs aware of emacs/tern.el. For example by adding this to your .emacs file:
# (add-to-list 'load-path "/path/to/tern/emacs/")
# (autoload 'tern-mode "tern.el" nil t)
# Optionally set tern-mode to be automatically enabled for your JavaScript mode of choice. Here’s the snippet for js-mode:
# (add-hook 'js-mode-hook (lambda () (tern-mode t)))
# The Emacs mode uses the bin/tern server, and project configuration is done with a .tern-project file.
#
# Buffers in tern-mode add a completion-at-point function that activates Tern’s completion. So, unless you rebound the key, M-tab (or C-M-i) will trigger completion.
#
# When the point is in an argument list, Tern will show argument names and types at the bottom of the screen.
#
# The following additional keys are bound:
#
# M-.
# Jump to the definition of the thing under the cursor.
#
# M-,
# Brings you back to last place you were when you pressed M-..
#
# C-c C-r
# Rename the variable under the cursor.
#
# C-c C-c
# Find the type of the thing under the cursor.
#
# C-c C-d
# Find docs of the thing under the cursor. Press again to open the associated URL (if any).
#
# Auto-Complete
#
# If you want to use auto-complete.el for completion, append following codes:
#
# (eval-after-load 'tern
#    '(progn
#       (require 'tern-auto-complete)
#       (tern-ac-setup)))
# If tern-ac-on-dot is non-nil (default), typing .(dot) invokes auto-complete to select completions. Calling the command tern-ac-complete, one can invoke auto-complete manually.
